package components

import "fmt"

type Point struct {
	X int
	Y int
}

type svgCalcResult struct {
	X      int
	Y      int
	Width  float64
	Height float64
}

type SvgPoint struct {
	X int
	Y int
}

func svgCalcCellTopLeft(params SvgCalcParams, p Point) SvgPoint {
	return SvgPoint{
		X: int(params.GridBorder + float64(p.X)*(params.CellSize+params.CellSpacing)),
		Y: int(params.Height -
			(params.GridBorder + float64(p.Y)*(params.CellSize+params.CellSpacing) + params.CellSize)),
	}
}

func svgCalcCellRect(w, h int, svgCalcParams SvgCalcParams, p Point) svgCalcResult {
	topLeft := svgCalcCellTopLeft(svgCalcParams, p)
	return svgCalcResult{
		X:      topLeft.X,
		Y:      topLeft.Y,
		Width:  svgCalcParams.CellSize,
		Height: svgCalcParams.CellSize,
	}
}

templ SvgGrid(w, h int, svgCalcParams SvgCalcParams) {
	<g>
		for x := range w {
			for y := range h {
				{{
					rectParams := svgCalcCellRect(w, h, svgCalcParams, Point{X: x, Y: y})
				}}
				<rect
					id={ fmt.Sprintf("grid-%d-%d", x, y) }
					class="grid fill-[#f1f1f1]"
					x={ rectParams.X }
					y={ rectParams.Y }
					width={ rectParams.Width }
					height={ rectParams.Height }
				></rect>
			}
		}
	</g>
}
